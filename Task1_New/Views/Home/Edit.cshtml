@* @model School
@{
    ViewData["Title"] = "Edit";
}
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="form-group">
                <input type="hidden" asp-for="StudentInfo.StudentId" />
                <label asp-for="StudentInfo.Name" class="control-label"></label>
                <input asp-for="StudentInfo.Name" class="form-control" />
                <span asp-validation-for="StudentInfo.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudentInfo.Age" class="control-label"></label>
                <input asp-for="StudentInfo.Age" class="form-control" />
                <span asp-validation-for="StudentInfo.Age" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudentInfo.Standard" class="control-label"></label>
                <input asp-for="StudentInfo.Standard" class="form-control" />
                <span asp-validation-for="StudentInfo.Standard" class="text-danger"></span>
            </div>
            <h2>Parents</h2>
            @if (Model.ParentsList.Any())
            {
                for (int i = 0; i < Model.ParentsList.Count; i++)
                {
                    var parent = Model.ParentsList[i];
                    <div class="form-group">
                        <label asp-for="@Model.ParentsList[i].Name" class="control-label"></label>
                        <input asp-for="@Model.ParentsList[i].Name" class="form-control" />
                        <span asp-validation-for="@Model.ParentsList[i].Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.ParentsList[i].Contact" class="control-label"></label>
                        <input asp-for="@Model.ParentsList[i].Contact" class="form-control" />
                        <span asp-validation-for="@Model.ParentsList[i].Contact" class="text-danger"></span>
                    </div>
                    <input type="hidden" asp-for="@Model.ParentsList[i].Id" />
                    <button type="button" class="remove-position-btn btn btn-danger">Remove</button>
                }
            }
            else
            {
                <p>No parents found.</p>
            }

            <div id="parentContainer">

            </div>

            <button type="button" class="btn btn-primary" id="addParentBtn">Add Parent</button>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            var parentCount = @Model.ParentsList.Count;

            $('#addParentBtn').click(function () {
                $.ajax({
                    url: '@Url.Action("AddParent", "Home")',
                    type: 'GET',
                    success: function (data) {
                        $('#parentContainer').append(data);
                        parentCount++;
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred: " + error);
                    }
                });
            });

            $('#parentContainer').on('click', '.remove-position-btn', function () {
                $(this).closest('.parent-item').remove();
            });
        });
    </script>
} 

 *@

@* ChatGPT *@

@model Task1_New.Models.School

@{
    ViewData["Title"] = "Edit";
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" asp-for="StudentInfo.StudentId" />

            <!-- Student fields -->
            <div class="form-group">
                <label asp-for="StudentInfo.Name" class="control-label"></label>
                <input asp-for="StudentInfo.Name" class="form-control" />
                <span asp-validation-for="StudentInfo.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudentInfo.Age" class="control-label"></label>
                <input asp-for="StudentInfo.Age" class="form-control" />
                <span asp-validation-for="StudentInfo.Age" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudentInfo.Standard" class="control-label"></label>
                <input asp-for="StudentInfo.Standard" class="form-control" />
                <span asp-validation-for="StudentInfo.Standard" class="text-danger"></span>
            </div>

            <!-- Hidden input to store deleted parent IDs -->
            <input type="hidden" id="deletedParents" name="DeletedParents" value="" />

            <!-- Parents Section -->
            <h2>Parents</h2>
            <div id="parentContainer">
                @if (Model.ParentsList.Any())
                {
                    foreach (var item in Model.ParentsList)
                    {
                        <div class="parent-item">
                            <partial name="_addParentDetails" model="@item" />
                        </div>
                    }
                }
                else
                {
                    <div class="parent-item">
                        <partial name="_addParentDetails" model="new ParentInfo()" />
                    </div>
                }
            </div>

            <button type="button" class="btn btn-primary" id="addParentBtn">Add Parent</button>

            <div class="form-group mt-3">
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            var parentCount = @Model.ParentsList.Count;

            $('#addParentBtn').click(function () {
                $.ajax({
                    url: '@Url.Action("AddParent", "Home")',
                    type: 'GET',
                    success: function (data) {
                        $('#parentContainer').append(data);
                        parentCount++;
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred: " + error);
                    }
                });
            });

            $('#parentContainer').on('click', '.remove-position-btn', function () {
                var parentItem = $(this).closest('.parent-item');
                
                // Move the parent ID to the deletedParents hidden field
                var deletedParentsField = $('#deletedParents');
                var parentId = parentItem.find('input[name$=".Id"]').val();

                if (parentId) {
                    var currentDeleted = deletedParentsField.val();
                    deletedParentsField.val(currentDeleted + (currentDeleted ? ',' : '') + parentId);
                }

                parentItem.remove(); // Remove the DOM element
                parentCount--;
            });
        });
    </script>
}
